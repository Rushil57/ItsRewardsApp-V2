@page "/counter"

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

@*<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>*@
<style>
/* BASIC */

* {
  box-sizing: border-box;
}

:root{
  --color-success: green;
  --color-error: red;
}

html,
body {
  background: #eee;
  min-height: 100vh;
  width: 100%;
  margin: 0;
  padding: 0;
  position: relative;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Ubuntu,
    "Helvetica Neue", Arial, sans-serif;
  font-size: 24px;
}

h1 {
  margin: 0.25em 0;
}
h1 {
  margin: 0.125em 0;
}

.wrapper {
  /*
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    */
  margin: 0 auto;
  min-width: 250px;
  width: 100%;
  max-width: 700px;
  padding: 16px;
}

/* LIST */

ul,
li {
  list-style: none;
  margin: 0;
  padding: 0;
  width: 100%;
}
ul {
  padding: 8px;
  border-radius: 8px;
  background: #fff;
}
li {
  border-bottom: 1px solid #aaa;
  overflow: hidden;
}
li:last-child {
  border-bottom: none;
}

button {
  visibility: hidden;
}
button .fa-times {
  color: red;
}
button .fa-check {
  color: green;
}

/* SWIPE */
.swipe-container {
  position: relative;
  background-color: #eee;
}
.reveal-left,
.reveal-right {
  position: absolute;
  top: 0;
  height: 100%;
  width: 50px;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  padding: 8px;
  font-weight: 500;
  text-transform: uppercase;
}
.reveal-left {
  background-color: var(--color-error);
  text-align: left;
  left: 0;
}
.reveal-right {
  background-color: var(--color-success);
  right: 0;
  text-align: right;
  flex-direction: row-reverse;
}

.swipe-item {
  position: relative;
  width: 100%;
  display: flex;
  flex-wrap: nowrap;
  padding: 16px 0;
  background-color: white;
  z-index: 2;
  user-select: none;
}
.swipe-item > button,
.swipe-item > span {
  padding: 8px;
  font-size: inherit;
}
.swipe-item > button {
  margin: 0 8px;
  background: transparent;
  border: 0;
  outline: none;
}
.swipe-item > span {
  flex: 1;
}

</style>
<div class="wrapper">
    <h1>SWIPE PROTOTYPE</h1>
    <h2>Swipe items left or right to categorize them</h2>
    <ul>
      <li>
        <div class="swipe-container">
          <div class="reveal-left">
            <i class="fas fa-times"></i>
          </div>
          <div class="swipe-item">
            <button type="button">
              <i class="fas fa-times"></i>
            </button>
            <span>Swipe Item left or right</span>
            <button type="button">
              <i class="fas fa-check"></i>
            </button>
          </div>
          <div class="reveal-right">
            <i class="fas fa-check"></i>
          </div>
        </div>
      </li>
      <li class="swipe-container">
        <div class="swipe-container">
          <div class="reveal-left">
            <i class="fas fa-times"></i>
          </div>
          <div class="swipe-item">
            <button type="button">
              <i class="fas fa-times"></i>
            </button>
            <span>Swipe Item with a bit more text than should overflow to test if the styles work fine. It seems like it is. But we can test it with even more text.</span>
            <button type="button">
              <i class="fas fa-check"></i>
            </button>
          </div>
          <div class="reveal-right">
            <i class="fas fa-check"></i>
          </div>
        </div>
      </li>
      <li>
        <div class="swipe-container">
          <div class="reveal-left">
            <i class="fas fa-times"></i>
          </div>
          <div class="swipe-item">
            <button type="button">
              <i class="fas fa-times"></i>
            </button>
            <span>Maybe the HTML-Markum can be reduced.</span>
            <button type="button">
              <i class="fas fa-check"></i>
            </button>
          </div>
          <div class="reveal-right">
            <i class="fas fa-check"></i>
          </div>
        </div>
      </li>
      <li>
        <div class="swipe-container">
          <div class="reveal-left">
            <i class="fas fa-times"></i>
          </div>
          <div class="swipe-item">
            <button type="button">
              <i class="fas fa-times"></i>
            </button>
            <span>Doubletap to undo your choice</span>
            <button type="button">
              <i class="fas fa-check"></i>
            </button>
          </div>
          <div class="reveal-right">
            <i class="fas fa-check"></i>
          </div>
        </div>
      </li>
      <li>
        <div class="swipe-container">
          <div class="reveal-left">
            <i class="fas fa-times"></i>
          </div>
          <div class="swipe-item">
            <button type="button">
              <i class="fas fa-times"></i>
            </button>
            <span>Only <b>651 Byte JS</b> needed.</span>
            <button type="button">
              <i class="fas fa-check"></i>
            </button>
          </div>
          <div class="reveal-right">
            <i class="fas fa-check"></i>
          </div>
        </div>
      </li>
    </ul>
  </div>
@code {
    private int currentCount = 0;
    [Inject]
    public IJSRuntime JSRuntime { get; set; }
    private IJSObjectReference _jsModule;
    protected override Task OnInitializedAsync()
    {
        IncrementCount();
        return base.OnInitializedAsync();
    }
    private async Task IncrementCount()
    {
        _jsModule = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./scripts/commonScript.js");
        await _jsModule.InvokeVoidAsync("swipemoment");
    }
}
