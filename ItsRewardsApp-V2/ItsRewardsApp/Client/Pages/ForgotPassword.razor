<h3>Forgot Password</h3>
@page "/forgotpassword"
@using ItsRewardsApp.Shared.Models;
@using ItsRewardsApp.Shared.ViewModels
@inject HttpClient Http
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<header class="header">
    <a href="/dashboard">
        @*<img src="images/itsRewardsLogo.jpg" class="cls-header-img" alt="" />*@
        <img src=@menuIconImage class="cls-header-img" alt="" />
    </a>
    <h5 style="color:#1f81b2;">@headerName</h5>
</header>
<div class="container cls-login-header">
    <div class="row">
        <div class="main-title text-center">
            <h6 class="title">Forgot Password</h6>
            <p hidden="@showErrorMsg" style="color:red;">Invalid Cellphone Number</p>
        </div>
    </div>
    <EditForm Model="@loginModel" OnValidSubmit="SendMessage">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <div class="row g-3 mb-3">
            <div class="col-sm-12">
                <label for="email" class="form-label">Cell Phone<sup style="color:red;">*</sup></label>
                <InputText type="text" autocomplete="off" maxlength="10" name="CellPhone" id="CellPhone" placeholder="Please enter your Cell Phone Number" class="form-control" @bind-Value="loginModel.CellPhone" onkeypress="return (event.charCode !=8 && event.charCode ==0 || (event.charCode >= 48 && event.charCode <= 57))"></InputText>
                <ValidationMessage For="@(()=> loginModel.CellPhone)" />
            </div>
        </div>
        <button class="w-100 btn mb-4 btn btn-primary" type="submit" style="background-color:#1f81b2;color:#fff;">Send Message</button>
    </EditForm>
</div>
<footer class="footer">
    <p class="cls-footer-common">© 2022 - SUCCESS SYSTEMS, INC. &nbsp;-&nbsp; <a href="/legal/privacy.html" target="_blank">PRIVACY</a> | <a href="/legal/terms.html" target="_blank">TERMS</a></p>
</footer>
@code {

    public ForgetPasswordViewModel loginModel { get; set; }
    private bool showErrorMsg { get; set; } = true;
    private bool showerrorMsg_phone { get; set; } = true;
    public string appProfileName = "";
    public string menuIconImage = "";
    public string headerName = "";
    protected override Task OnInitializedAsync()
    {
        GetSession();
        loginModel = new ForgetPasswordViewModel();
        return base.OnInitializedAsync();
    }
    private async Task GetSession()
    {
        appProfileName = await sessionStorage.GetItemAsync<string>("appProfileName");
        if (appProfileName.ToLower() == "e-commerce")
        {
            EcommerceApplicationProfile ea = new EcommerceApplicationProfile();
            menuIconImage = ea.MenuIcon;
            headerName = "E-Commerce";
        }
        if (appProfileName.ToLower() == "its-reward")
        {
            ItRewardApplicationProfile ia = new ItRewardApplicationProfile();
            menuIconImage = ia.MenuIcon;
            headerName = ia.Title;
        }
        StateHasChanged();
    }
    public async Task SendMessage()
    {
        await sessionStorage.SetItemAsync("CellPhone", loginModel.CellPhone);
        var result = await Http.GetStringAsync($"api/Login/{loginModel.CellPhone}");

        if (result != "" && result != "Invalid cellphone")
        {

            await sessionStorage.SetItemAsync("ForgotPin", result);
            NavigationManager.NavigateTo("/resetpassword");
        }
        else if (result == "Invalid cellphone")
        {
            showErrorMsg = false;
        }
        else
        {
            await sessionStorage.SetItemAsync("CellPhone", "");
        }
    }
}